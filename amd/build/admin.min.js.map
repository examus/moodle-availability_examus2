{"version":3,"file":"admin.min.js","sources":["../src/admin.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Availability plugin for integration with Examus.\n *\n * @module     availability_examus2/admin\n * @copyright  2019-2023 Maksim Burnin <maksim.burnin@gmail.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n /**\n * Log table init\n *\n * @method init\n */\n export function init() {\n    var jsNewEntryBtn = document.querySelector('.js-new-entry-all-btn');\n    var tableCheckboxItem = [...document.querySelectorAll('.js-item-checkbox')];\n    var tableCheckboxAll = document.querySelector('.js-all-checkbox');\n    tableCheckboxAll.addEventListener('change', function(e) {\n        if (e.target.checked) {\n            checked(true);\n            jsNewEntryBtn.removeAttribute('disabled');\n        } else {\n            checked(false);\n        }\n    });\n    tableCheckboxItem.forEach(function(el) {\n        el.addEventListener('change', function(e) {\n            if (e.target.checked) {\n                jsNewEntryBtn.removeAttribute('disabled');\n            } else if (tableCheckboxItem.every(function(item) {\n                    return !item.checked;\n                })) {\n                jsNewEntryBtn.setAttribute('disabled', 'disabled');\n            }\n        });\n    });\n    jsNewEntryBtn.addEventListener('click', async function(e) {\n        e.preventDefault();\n        var formIds = [];\n        var formForces = [];\n        tableCheckboxItem.forEach(function(el) {\n            if (el.checked) {\n                formIds.push(el.value);\n                formForces.push(el.getAttribute('force'));\n            }\n        });\n        var renewForm = document.createElement(\"form\");\n        var renewFormAction = document.createElement(\"input\");\n        var renewFormIds = document.createElement(\"select\");\n        var renewFormForces = document.createElement(\"select\");\n        renewFormAction.name = \"action\";\n        renewFormIds.name = \"ids[]\";\n        renewFormForces.name = \"forces[]\";\n        renewFormIds.multiple = true;\n        renewFormForces.multiple = true;\n        renewFormAction.value = \"renew\";\n        formIds.forEach(function(el) {\n            var option = document.createElement(\"option\");\n            option.selected = true;\n            option.value = el;\n            renewFormIds.append(option);\n        });\n        formForces.forEach(function(el) {\n            var option = document.createElement(\"option\");\n            option.selected = true;\n            option.value = el;\n            renewFormForces.append(option);\n        });\n        renewForm.append(renewFormAction);\n        renewForm.append(renewFormIds);\n        renewForm.append(renewFormForces);\n        renewForm.method = \"post\";\n        document.querySelector('body').append(renewForm);\n        renewForm.submit();\n    });\n\n    /**\n     * Check all columns\n     *\n     * @method checked\n     * @param {Boolean} state\n     */\n    function checked(state) {\n        for (var i = 0; i < tableCheckboxItem.length; i++) {\n            tableCheckboxItem[i].checked = state;\n        }\n    }\n}"],"names":["jsNewEntryBtn","document","querySelector","tableCheckboxItem","querySelectorAll","checked","state","i","length","addEventListener","e","target","removeAttribute","forEach","el","every","item","setAttribute","async","preventDefault","formIds","formForces","push","value","getAttribute","renewForm","createElement","renewFormAction","renewFormIds","renewFormForces","name","multiple","option","selected","append","method","submit"],"mappings":";;;;;;;;eA6BQA,cAAgBC,SAASC,cAAc,yBACvCC,kBAAoB,IAAIF,SAASG,iBAAiB,+BAmE7CC,QAAQC,WACR,IAAIC,EAAI,EAAGA,EAAIJ,kBAAkBK,OAAQD,IAC1CJ,kBAAkBI,GAAGF,QAAUC,MApEhBL,SAASC,cAAc,oBAC7BO,iBAAiB,UAAU,SAASC,GAC7CA,EAAEC,OAAON,SACTA,SAAQ,GACRL,cAAcY,gBAAgB,aAE9BP,SAAQ,MAGhBF,kBAAkBU,SAAQ,SAASC,IAC/BA,GAAGL,iBAAiB,UAAU,SAASC,GAC/BA,EAAEC,OAAON,QACTL,cAAcY,gBAAgB,YACvBT,kBAAkBY,OAAM,SAASC,aAC5BA,KAAKX,YAEjBL,cAAciB,aAAa,WAAY,kBAInDjB,cAAcS,iBAAiB,SAASS,eAAeR,GACnDA,EAAES,qBACEC,QAAU,GACVC,WAAa,GACjBlB,kBAAkBU,SAAQ,SAASC,IAC3BA,GAAGT,UACHe,QAAQE,KAAKR,GAAGS,OAChBF,WAAWC,KAAKR,GAAGU,aAAa,kBAGpCC,UAAYxB,SAASyB,cAAc,QACnCC,gBAAkB1B,SAASyB,cAAc,SACzCE,aAAe3B,SAASyB,cAAc,UACtCG,gBAAkB5B,SAASyB,cAAc,UAC7CC,gBAAgBG,KAAO,SACvBF,aAAaE,KAAO,QACpBD,gBAAgBC,KAAO,WACvBF,aAAaG,UAAW,EACxBF,gBAAgBE,UAAW,EAC3BJ,gBAAgBJ,MAAQ,QACxBH,QAAQP,SAAQ,SAASC,QACjBkB,OAAS/B,SAASyB,cAAc,UACpCM,OAAOC,UAAW,EAClBD,OAAOT,MAAQT,GACfc,aAAaM,OAAOF,WAExBX,WAAWR,SAAQ,SAASC,QACpBkB,OAAS/B,SAASyB,cAAc,UACpCM,OAAOC,UAAW,EAClBD,OAAOT,MAAQT,GACfe,gBAAgBK,OAAOF,WAE3BP,UAAUS,OAAOP,iBACjBF,UAAUS,OAAON,cACjBH,UAAUS,OAAOL,iBACjBJ,UAAUU,OAAS,OACnBlC,SAASC,cAAc,QAAQgC,OAAOT,WACtCA,UAAUW"}